<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netlearning.course.mapper.FrequentlyAskedQuestionMapper">
  <resultMap id="BaseResultMap" type="com.netlearning.framework.domain.course.FrequentlyAskedQuestion">
    <id column="frequently_asked_question_id" jdbcType="BIGINT" property="frequentlyAskedQuestionId" />
    <result column="frequently_asked_question_title" jdbcType="VARCHAR" property="frequentlyAskedQuestionTitle" />
    <result column="frequently_asked_question_content" jdbcType="VARCHAR" property="frequentlyAskedQuestionContent" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    frequently_asked_question_id, frequently_asked_question_title, frequently_asked_question_content,
    course_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.netlearning.framework.domain.course.FrequentlyAskedQuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_frequently_asked_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_frequently_asked_question
    where frequently_asked_question_id = #{frequentlyAskedQuestionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_frequently_asked_question
    where frequently_asked_question_id = #{frequentlyAskedQuestionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.netlearning.framework.domain.course.FrequentlyAskedQuestionExample">
    delete from t_frequently_asked_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.netlearning.framework.domain.course.FrequentlyAskedQuestion">
    insert into t_frequently_asked_question (frequently_asked_question_id, frequently_asked_question_title,
      frequently_asked_question_content, course_id,
      create_time, update_time)
    values (#{frequentlyAskedQuestionId,jdbcType=BIGINT}, #{frequentlyAskedQuestionTitle,jdbcType=VARCHAR},
      #{frequentlyAskedQuestionContent,jdbcType=VARCHAR}, #{courseId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.netlearning.framework.domain.course.FrequentlyAskedQuestion">
    insert into t_frequently_asked_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="frequentlyAskedQuestionId != null">
        frequently_asked_question_id,
      </if>
      <if test="frequentlyAskedQuestionTitle != null">
        frequently_asked_question_title,
      </if>
      <if test="frequentlyAskedQuestionContent != null">
        frequently_asked_question_content,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="frequentlyAskedQuestionId != null">
        #{frequentlyAskedQuestionId,jdbcType=BIGINT},
      </if>
      <if test="frequentlyAskedQuestionTitle != null">
        #{frequentlyAskedQuestionTitle,jdbcType=VARCHAR},
      </if>
      <if test="frequentlyAskedQuestionContent != null">
        #{frequentlyAskedQuestionContent,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.netlearning.framework.domain.course.FrequentlyAskedQuestionExample" resultType="java.lang.Long">
    select count(*) from t_frequently_asked_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_frequently_asked_question
    <set>
      <if test="record.frequentlyAskedQuestionId != null">
        frequently_asked_question_id = #{record.frequentlyAskedQuestionId,jdbcType=BIGINT},
      </if>
      <if test="record.frequentlyAskedQuestionTitle != null">
        frequently_asked_question_title = #{record.frequentlyAskedQuestionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.frequentlyAskedQuestionContent != null">
        frequently_asked_question_content = #{record.frequentlyAskedQuestionContent,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_frequently_asked_question
    set frequently_asked_question_id = #{record.frequentlyAskedQuestionId,jdbcType=BIGINT},
      frequently_asked_question_title = #{record.frequentlyAskedQuestionTitle,jdbcType=VARCHAR},
      frequently_asked_question_content = #{record.frequentlyAskedQuestionContent,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netlearning.framework.domain.course.FrequentlyAskedQuestion">
    update t_frequently_asked_question
    <set>
      <if test="frequentlyAskedQuestionTitle != null">
        frequently_asked_question_title = #{frequentlyAskedQuestionTitle,jdbcType=VARCHAR},
      </if>
      <if test="frequentlyAskedQuestionContent != null">
        frequently_asked_question_content = #{frequentlyAskedQuestionContent,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where frequently_asked_question_id = #{frequentlyAskedQuestionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netlearning.framework.domain.course.FrequentlyAskedQuestion">
    update t_frequently_asked_question
    set frequently_asked_question_title = #{frequentlyAskedQuestionTitle,jdbcType=VARCHAR},
      frequently_asked_question_content = #{frequentlyAskedQuestionContent,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where frequently_asked_question_id = #{frequentlyAskedQuestionId,jdbcType=BIGINT}
  </update>
</mapper>
