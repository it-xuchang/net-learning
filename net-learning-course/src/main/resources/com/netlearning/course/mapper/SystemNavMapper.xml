<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netlearning.course.mapper.SystemNavMapper">
  <resultMap id="BaseResultMap" type="com.netlearning.framework.domain.course.SystemNav">
    <id column="system_nav_id" jdbcType="BIGINT" property="systemNavId" />
    <result column="system_nav_url" jdbcType="VARCHAR" property="systemNavUrl" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="from_system_id" jdbcType="BIGINT" property="fromSystemId" />
    <result column="system_nav_handlers" jdbcType="VARCHAR" property="systemNavHandlers" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    system_nav_id, system_nav_url, course_id, from_system_id, system_nav_handlers
  </sql>
  <select id="selectByExample" parameterType="com.netlearning.framework.domain.course.SystemNavExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_system_nav
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_system_nav
    where system_nav_id = #{systemNavId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_system_nav
    where system_nav_id = #{systemNavId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.netlearning.framework.domain.course.SystemNavExample">
    delete from t_system_nav
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.netlearning.framework.domain.course.SystemNav">
    insert into t_system_nav (system_nav_id, system_nav_url, course_id,
      from_system_id, system_nav_handlers)
    values (#{systemNavId,jdbcType=BIGINT}, #{systemNavUrl,jdbcType=VARCHAR}, #{courseId,jdbcType=BIGINT},
      #{fromSystemId,jdbcType=BIGINT}, #{systemNavHandlers,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.netlearning.framework.domain.course.SystemNav">
    insert into t_system_nav
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="systemNavId != null">
        system_nav_id,
      </if>
      <if test="systemNavUrl != null">
        system_nav_url,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="fromSystemId != null">
        from_system_id,
      </if>
      <if test="systemNavHandlers != null">
        system_nav_handlers,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="systemNavId != null">
        #{systemNavId,jdbcType=BIGINT},
      </if>
      <if test="systemNavUrl != null">
        #{systemNavUrl,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="fromSystemId != null">
        #{fromSystemId,jdbcType=BIGINT},
      </if>
      <if test="systemNavHandlers != null">
        #{systemNavHandlers,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.netlearning.framework.domain.course.SystemNavExample" resultType="java.lang.Long">
    select count(*) from t_system_nav
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_system_nav
    <set>
      <if test="record.systemNavId != null">
        system_nav_id = #{record.systemNavId,jdbcType=BIGINT},
      </if>
      <if test="record.systemNavUrl != null">
        system_nav_url = #{record.systemNavUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.fromSystemId != null">
        from_system_id = #{record.fromSystemId,jdbcType=BIGINT},
      </if>
      <if test="record.systemNavHandlers != null">
        system_nav_handlers = #{record.systemNavHandlers,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_system_nav
    set system_nav_id = #{record.systemNavId,jdbcType=BIGINT},
      system_nav_url = #{record.systemNavUrl,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=BIGINT},
      from_system_id = #{record.fromSystemId,jdbcType=BIGINT},
      system_nav_handlers = #{record.systemNavHandlers,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netlearning.framework.domain.course.SystemNav">
    update t_system_nav
    <set>
      <if test="systemNavUrl != null">
        system_nav_url = #{systemNavUrl,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="fromSystemId != null">
        from_system_id = #{fromSystemId,jdbcType=BIGINT},
      </if>
      <if test="systemNavHandlers != null">
        system_nav_handlers = #{systemNavHandlers,jdbcType=VARCHAR},
      </if>
    </set>
    where system_nav_id = #{systemNavId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netlearning.framework.domain.course.SystemNav">
    update t_system_nav
    set system_nav_url = #{systemNavUrl,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=BIGINT},
      from_system_id = #{fromSystemId,jdbcType=BIGINT},
      system_nav_handlers = #{systemNavHandlers,jdbcType=VARCHAR}
    where system_nav_id = #{systemNavId,jdbcType=BIGINT}
  </update>
</mapper>
