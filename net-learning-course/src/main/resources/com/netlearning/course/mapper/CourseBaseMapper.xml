<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netlearning.course.mapper.CourseBaseMapper">
  <resultMap id="BaseResultMap" type="com.netlearning.framework.domain.course.CourseBase">
    <id column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="users" jdbcType="VARCHAR" property="users" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="studymodel" jdbcType="VARCHAR" property="studymodel" />
    <result column="teachmode" jdbcType="VARCHAR" property="teachmode" />
    <result column="sub_category" jdbcType="VARCHAR" property="subCategory" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.netlearning.framework.domain.course.CourseBase">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, teacher_id, course_name, users, category, grade, studymodel, teachmode,
    sub_category, status, dept_id
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.netlearning.framework.domain.course.CourseBaseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_course_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.netlearning.framework.domain.course.CourseBaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_course_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_course_base
    where course_id = #{courseId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_course_base
    where course_id = #{courseId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.netlearning.framework.domain.course.CourseBaseExample">
    delete from t_course_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.netlearning.framework.domain.course.CourseBase">
    insert into t_course_base (course_id, teacher_id, course_name,
      users, category, grade,
      studymodel, teachmode, sub_category,
      status, dept_id, description
      )
    values (#{courseId,jdbcType=BIGINT}, #{teacherId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR},
      #{users,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR},
      #{studymodel,jdbcType=VARCHAR}, #{teachmode,jdbcType=VARCHAR}, #{subCategory,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.netlearning.framework.domain.course.CourseBase">
    insert into t_course_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="users != null">
        users,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="studymodel != null">
        studymodel,
      </if>
      <if test="teachmode != null">
        teachmode,
      </if>
      <if test="subCategory != null">
        sub_category,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="users != null">
        #{users,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="studymodel != null">
        #{studymodel,jdbcType=VARCHAR},
      </if>
      <if test="teachmode != null">
        #{teachmode,jdbcType=VARCHAR},
      </if>
      <if test="subCategory != null">
        #{subCategory,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.netlearning.framework.domain.course.CourseBaseExample" resultType="java.lang.Long">
    select count(*) from t_course_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_course_base
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=BIGINT},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.users != null">
        users = #{record.users,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.studymodel != null">
        studymodel = #{record.studymodel,jdbcType=VARCHAR},
      </if>
      <if test="record.teachmode != null">
        teachmode = #{record.teachmode,jdbcType=VARCHAR},
      </if>
      <if test="record.subCategory != null">
        sub_category = #{record.subCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_course_base
    set course_id = #{record.courseId,jdbcType=BIGINT},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      users = #{record.users,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      studymodel = #{record.studymodel,jdbcType=VARCHAR},
      teachmode = #{record.teachmode,jdbcType=VARCHAR},
      sub_category = #{record.subCategory,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_course_base
    set course_id = #{record.courseId,jdbcType=BIGINT},
      teacher_id = #{record.teacherId,jdbcType=BIGINT},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      users = #{record.users,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      studymodel = #{record.studymodel,jdbcType=VARCHAR},
      teachmode = #{record.teachmode,jdbcType=VARCHAR},
      sub_category = #{record.subCategory,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netlearning.framework.domain.course.CourseBase">
    update t_course_base
    <set>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="users != null">
        users = #{users,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="studymodel != null">
        studymodel = #{studymodel,jdbcType=VARCHAR},
      </if>
      <if test="teachmode != null">
        teachmode = #{teachmode,jdbcType=VARCHAR},
      </if>
      <if test="subCategory != null">
        sub_category = #{subCategory,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.netlearning.framework.domain.course.CourseBase">
    update t_course_base
    set teacher_id = #{teacherId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      users = #{users,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      studymodel = #{studymodel,jdbcType=VARCHAR},
      teachmode = #{teachmode,jdbcType=VARCHAR},
      sub_category = #{subCategory,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where course_id = #{courseId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netlearning.framework.domain.course.CourseBase">
    update t_course_base
    set teacher_id = #{teacherId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      users = #{users,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      studymodel = #{studymodel,jdbcType=VARCHAR},
      teachmode = #{teachmode,jdbcType=VARCHAR},
      sub_category = #{subCategory,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=BIGINT}
  </update>
</mapper>
